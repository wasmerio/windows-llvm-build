version: "{build} ~ {branch}"

os: Visual Studio 2017

environment:
  matrix:
    - CHANNEL: stable
      ARCH: x86_64
      ABI: msvc
      TARGET: x86_64-pc-windows-msvc
      APPVEYOR_SAVE_CACHE_ON_ERROR: true # Comment out after llvm install cached


cache:
  - 'C:\projects\deps\llvm-8.0.1.src' # Comment out after llvm install cached
  - 'C:\projects\deps\llvm-8.0.1-build-dir' # Comment out after llvm install cached
  - 'C:\projects\deps\llvm-8.0.1-install'

install:
  # Install LLVM
  - set "LLVM_INSTALLED=C:\projects\deps\llvm-8.0.1-install\LLVMInstalledAllTargets.txt"
  - if exist %LLVM_INSTALLED% echo LLVMInstalled.txt found, using cached version
  - if not exist %LLVM_INSTALLED% echo LLVMInstalled.txt not found, building LLVM
  - if not exist C:\projects\deps mkdir C:\projects\deps
  - dir C:\projects\deps
  - if not exist C:\projects\deps\llvm-8.0.1-build-dir mkdir C:\projects\deps\llvm-8.0.1-build-dir
  - if not exist C:\projects\deps\llvm-8.0.1-install mkdir C:\projects\deps\llvm-8.0.1-install
  - if not exist %LLVM_INSTALLED% cd C:\projects\deps
  - if not exist C:\projects\deps\llvm-8.0.1.src appveyor DownloadFile https://github.com/llvm/llvm-project/releases/download/llvmorg-8.0.1/llvm-8.0.1.src.tar.xz -FileName llvm-8.0.1.src.tar.xz
  - if not exist C:\projects\deps\llvm-8.0.1.src 7z x "llvm-8.0.1.src.tar.xz" -so | 7z x -aoa -si -ttar
  - if not exist %LLVM_INSTALLED% cd C:\projects\deps\llvm-8.0.1-build-dir
  - if not exist %LLVM_INSTALLED% cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX="C:\projects\deps\llvm-8.0.1-install" -DLLVM_TARGETS_TO_BUILD="X86;AArch64" -DLLVM_BUILD_EXAMPLES=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_BUILD_TESTS=OFF -DLLVM_INCLUDE_TESTS=OFF -Thost=x64 C:\projects\deps\llvm-8.0.1.src
  # - if not exist %LLVM_INSTALLED% cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX="C:\projects\deps\llvm-8.0.1-install" -DLLVM_TARGETS_TO_BUILD="all" -DLLVM_BUILD_EXAMPLES=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_BUILD_TESTS=OFF -DLLVM_INCLUDE_TESTS=OFF -Thost=x64 C:\projects\deps\llvm-8.0.1.src
  - if not exist %LLVM_INSTALLED% cmake --build . --config Release --target INSTALL -- /m
  - if not exist %LLVM_INSTALLED% dir C:\projects\deps\llvm-8.0.1-install\bin
  - if not exist %LLVM_INSTALLED% C:\projects\deps\llvm-8.0.1-install\bin\llvm-config.exe --version
  - if not exist %LLVM_INSTALLED% type NUL > %LLVM_INSTALLED%
  - set "LLVM_SYS_80_PREFIX=C:\projects\deps\llvm-8.0.1-install"
  - echo LLVM Install Ready at C:\projects\deps\llvm-8.0.1-install
  - if exist %LLVM_INSTALLED% cd C:\projects\deps
  - if exist %LLVM_INSTALLED% 7z a llvm-8.0.1-install.zip C:\projects\deps\llvm-8.0.1-install\
  - if exist %LLVM_INSTALLED% echo MD5 hash for archive
  - if exist %LLVM_INSTALLED% certUtil -hashfile llvm-8.0.1-install.zip MD5
  # - cd "%APPVEYOR_BUILD_FOLDER%"
  - appveyor PushArtifact llvm-8.0.1-install.zip

# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

build_script:
  - echo build complete
